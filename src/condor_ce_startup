#!/bin/sh

fail() {
    RETVAL="$1"
    MSG="$2"
    echo -e "\n$MSG"
    exit $RETVAL
}

# Source condor-ce environment
[ -f /usr/share/condor-ce/condor_ce_env_bootstrap ] && . /usr/share/condor-ce/condor_ce_env_bootstrap

# Skip sanity checks if running as a central collector
if [[ "$1" != "collector" ]]; then
    # Check value of QUEUE_SUPER_USER_MAY_IMPERSONATE for HTCondor batch systems
    condor_ce_config_val -config 2>&1 | grep '02-ce-condor.conf' > /dev/null
    if [ $? -eq 0 ]; then
        CONFIG_KNOB='QUEUE_SUPER_USER_MAY_IMPERSONATE'
        CONFIG_VAL=`CONDOR_CONFIG=/etc/condor/condor_config condor_config_val $CONFIG_KNOB`
        [ "$CONFIG_VAL" != '.*' ] && fail 6 "HTCondor batch system is improperly configured for use with HTCondor CE.\
Please verify that '$CONFIG_KNOB=.*' is set in your HTCondor configuration."
    fi

    # Verify that the HTCondor Python bindings are in the PYTHONPATH
    python -c "import htcondor; import classad" &> /dev/null
    [ $? -ne 0 ] && fail 6 "Could not load HTCondor Python bindings. \
Please ensure that the 'htcondor' and 'classad' are in your PYTHONPATH"

    # Verify configuration required for the JobRouter. Note that this only verifies
    # the first route in JOB_ROUTER_ENTRIES
    for ATTR in 'JOB_ROUTER_DEFAULTS' 'JOB_ROUTER_ENTRIES'; do
        python -c "import htcondor; import classad; classad.parseAds(htcondor.param[\"$ATTR\"]).next()" &> /dev/null
        [ $? -ne 0 ] && fail 6 "Could not read $ATTR in the HTCondor CE configuration. Please verify syntax correctness."
    done

    JOB_ROUTER_DEFAULTS=`/usr/share/condor-ce/condor_ce_router_defaults`
    JOB_ROUTER_ENTRIES=`condor_ce_config_val JOB_ROUTER_ENTRIES`

    # Ensure that users don't set_ attributes that are eval_set in the JOB_ROUTER_DEFAULTS
    for attr in `sed -n 's/.*eval_set_\([a-zA-Z_]*\).*/\1/p' <<< "$JOB_ROUTER_DEFAULTS"`; do
        grep "set_$attr" <<< "$JOB_ROUTER_ENTRIES" &> /dev/null
        [ $? -eq 0 ] && echo -e "\nWARNING: set_$attr in the JOB_ROUTER_ENTRIES will be overriden \
by the JOB_ROUTER DEFAULTS. Use eval_set_$attr instead."
    done

    # Ensure that users don't set the job environment in the Job Router
    tr ';' '\n' <<< "$JOB_ROUTER_ENTRIES" | egrep '[][ ]*[a-zA-Z]*_environment' &> /dev/null
    [ $? -eq 0 ] && fail 6 "Do not use the Job Router to set the environment. Place variables under \
[Local Settings] in /etc/osg/config.d/40-localsettings.ini"

    # Ensure that users don't eval_set_ default attributes in the ENTRIES since it may happen
    # after the expressions containing them get evaluated in the DEFAULTS
    for attr in `sed -n 's/.*\(default_[a-zA-Z_]*\).*/\1/p' <<< "$JOB_ROUTER_DEFAULTS" | sort | uniq`; do
        grep "eval_set_$attr" <<< "$JOB_ROUTER_ENTRIES" &> /dev/null
        [ $? -eq 0 ] && echo -e "\nWARNING: eval_set_$attr in the JOB_ROUTER_ENTRIES \
may not have any effect. Use set_$attr instead."
    done

    # Check if osg-configure has been run
    OSG_CONFIGURED=`condor_ce_config_val OSG_CONFIGURED | tr '[:upper:]' '[:lower:]'`
    [ "$OSG_CONFIGURED" != 'true' ] && echo -e "\nWARNING: osg-configure has not been run, degrading the functionality \
of the CE. Please run 'osg-configure -c' and restart condor-ce."

else
    shift
fi

# Use 'unshare' to allow the HTCondor-CE processes to have a different
# hostname from the rest of the system.

# This allows the HTCondor-CE to function on systems where the default
# system hostname differs from the one used on the public Internet
# (common on dual-networked hosts).

# The hostname is controlled by setting the environment variable
# $CONDORCE_HOSTNAME in /etc/sysconfig/condor-ce.
if [ "X$CONDORCE_HOSTNAME" == "X" ]; then
    exec condor_master "$@"
fi

exec unshare -u -- /usr/share/condor-ce/condor_ce_startup_internal "$@"
